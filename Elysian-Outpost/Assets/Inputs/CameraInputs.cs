//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Inputs/CameraInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @CameraInputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @CameraInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""CameraInputs"",
    ""maps"": [
        {
            ""name"": ""CameraMovements"",
            ""id"": ""c0d6a4ae-cc73-46c9-a262-fd2852b433c9"",
            ""actions"": [
                {
                    ""name"": ""Movements"",
                    ""type"": ""Value"",
                    ""id"": ""3217a8e8-7412-4e89-bc33-fc0fac442dcb"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Speeding"",
                    ""type"": ""Button"",
                    ""id"": ""af5bf533-79bf-4f80-a5a1-98e6c72c8c11"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""View"",
                    ""type"": ""Value"",
                    ""id"": ""3060637b-5d27-4fef-a515-1d9041f8c332"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""3D Vector"",
                    ""id"": ""fbc667b7-d07b-44ae-a487-ff47b5a3de48"",
                    ""path"": ""3DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movements"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4931dc01-d81c-47e9-8e73-335ebde55922"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movements"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ee8f6ea3-faf8-4e9c-8666-4c8d365acc62"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movements"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c891a415-b14e-4311-8f8a-281647c05e43"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movements"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""aaa10bcd-8952-4cf9-8674-e5cc1640f9aa"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movements"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""forward"",
                    ""id"": ""2b0b47d0-f01e-48cd-a805-5405da6235e7"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movements"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""backward"",
                    ""id"": ""e5a03611-e85d-4501-8d7e-dee4116b3d58"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movements"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d7646d0d-08cc-4c98-86ad-86901935c50d"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Speeding"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5190dc9-4a98-4ace-9bd9-1852ed2d9568"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""View"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // CameraMovements
        m_CameraMovements = asset.FindActionMap("CameraMovements", throwIfNotFound: true);
        m_CameraMovements_Movements = m_CameraMovements.FindAction("Movements", throwIfNotFound: true);
        m_CameraMovements_Speeding = m_CameraMovements.FindAction("Speeding", throwIfNotFound: true);
        m_CameraMovements_View = m_CameraMovements.FindAction("View", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // CameraMovements
    private readonly InputActionMap m_CameraMovements;
    private List<ICameraMovementsActions> m_CameraMovementsActionsCallbackInterfaces = new List<ICameraMovementsActions>();
    private readonly InputAction m_CameraMovements_Movements;
    private readonly InputAction m_CameraMovements_Speeding;
    private readonly InputAction m_CameraMovements_View;
    public struct CameraMovementsActions
    {
        private @CameraInputs m_Wrapper;
        public CameraMovementsActions(@CameraInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movements => m_Wrapper.m_CameraMovements_Movements;
        public InputAction @Speeding => m_Wrapper.m_CameraMovements_Speeding;
        public InputAction @View => m_Wrapper.m_CameraMovements_View;
        public InputActionMap Get() { return m_Wrapper.m_CameraMovements; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraMovementsActions set) { return set.Get(); }
        public void AddCallbacks(ICameraMovementsActions instance)
        {
            if (instance == null || m_Wrapper.m_CameraMovementsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CameraMovementsActionsCallbackInterfaces.Add(instance);
            @Movements.started += instance.OnMovements;
            @Movements.performed += instance.OnMovements;
            @Movements.canceled += instance.OnMovements;
            @Speeding.started += instance.OnSpeeding;
            @Speeding.performed += instance.OnSpeeding;
            @Speeding.canceled += instance.OnSpeeding;
            @View.started += instance.OnView;
            @View.performed += instance.OnView;
            @View.canceled += instance.OnView;
        }

        private void UnregisterCallbacks(ICameraMovementsActions instance)
        {
            @Movements.started -= instance.OnMovements;
            @Movements.performed -= instance.OnMovements;
            @Movements.canceled -= instance.OnMovements;
            @Speeding.started -= instance.OnSpeeding;
            @Speeding.performed -= instance.OnSpeeding;
            @Speeding.canceled -= instance.OnSpeeding;
            @View.started -= instance.OnView;
            @View.performed -= instance.OnView;
            @View.canceled -= instance.OnView;
        }

        public void RemoveCallbacks(ICameraMovementsActions instance)
        {
            if (m_Wrapper.m_CameraMovementsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICameraMovementsActions instance)
        {
            foreach (var item in m_Wrapper.m_CameraMovementsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CameraMovementsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CameraMovementsActions @CameraMovements => new CameraMovementsActions(this);
    public interface ICameraMovementsActions
    {
        void OnMovements(InputAction.CallbackContext context);
        void OnSpeeding(InputAction.CallbackContext context);
        void OnView(InputAction.CallbackContext context);
    }
}
